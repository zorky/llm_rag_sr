!function(){const e=5120,t={api:{en:"OUTSCALE API",fr:"API OUTSCALE"},allowDeny:{en:"Allow or deny:",fr:"Autoriser ou interdire :"},allow:{en:"Allow",fr:"Autoriser"},deny:{en:"Deny",fr:"Interdire"},what:{en:"What:",fr:"Quoi :"},actions:{en:"The following actions",fr:"Les actions suivantes"},notActions:{en:"All except the following actions",fr:"Tout sauf les actions suivantes"},statement:{en:"Statement",fr:"Déclaration"},allActions:{en:"All actions in this API",fr:"Toutes les actions de cette API"},allReadActions:{en:"All Read actions in this API",fr:"Toutes les actions Read de cette API"},allDescribeActions:{en:"All Describe actions in this API",fr:"Toutes les actions Describe de cette API"},addAnotherStatement:{en:"Add another statement",fr:"Ajouter une déclaration"},removeLastStatement:{en:"Remove statement",fr:"Supprimer la déclaration"},generateJson:{en:"Generate policy",fr:"Générer la politique"},labelJson:{en:"JSON:",fr:"JSON :"},labelJsonString:{en:"JSON string (for use with OSC CLI):",fr:"JSON dans une chaîne de texte (pour utilisation avec OSC CLI) :"},error:{en:"Error in statement #",fr:"Erreur dans la déclaration #"},errorNeedOneAction:{en:": You must select at least one action.",fr:" : Vous devez sélectionner au moins une action."},errorPolicyTooLong_1:{en:": The specified policy is too long (",fr:" : La politique spécifiée est trop longue ("},errorPolicyTooLong_2:{en:" characters not counting whitespaces). The maximum length for a policy is ",fr:" caractères sans compter les espaces blancs). La longueur maximale d'une politique est de "},errorPolicyTooLong_3:{en:" characters not counting whitespaces.",fr:" caractères sans compter les espaces blancs."},disclaimer:{en:"Note: Make sure you verify that this policy correctly fits your needs before you apply it.",fr:"Note : Vérifiez bien que cette politique remplit correctement vos besoins avant de l'appliquer."}},a=document.querySelector("html").lang,i=[[["api:*",["api:Read*"],"api:AcceptNetPeering","api:AddUserToUserGroup","api:CheckAuthentication","api:CreateAccessKey","api:CreateAccount","api:CreateApiAccessRule","api:CreateCa","api:CreateClientGateway","api:CreateDedicatedGroup","api:CreateDhcpOptions","api:CreateDirectLink","api:CreateDirectLinkInterface","api:CreateFlexibleGpu","api:CreateImage","api:CreateImageExportTask","api:CreateInternetService","api:CreateKeypair","api:CreateListenerRule","api:CreateLoadBalancer","api:CreateLoadBalancerListeners","api:CreateLoadBalancerPolicy","api:CreateLoadBalancerTags","api:CreateNatService","api:CreateNet","api:CreateNetAccessPoint","api:CreateNetPeering","api:CreateNic","api:CreatePolicy","api:CreatePolicyVersion","api:CreateProductType","api:CreatePublicIp","api:CreateRoute","api:CreateRouteTable","api:CreateSecurityGroup","api:CreateSecurityGroupRule","api:CreateServerCertificate","api:CreateSnapshot","api:CreateSnapshotExportTask","api:CreateSubnet","api:CreateTags","api:CreateUser","api:CreateUserGroup","api:CreateVirtualGateway","api:CreateVmGroup","api:CreateVmTemplate","api:CreateVms","api:CreateVolume","api:CreateVpnConnection","api:CreateVpnConnectionRoute","api:DeleteAccessKey","api:DeleteApiAccessRule","api:DeleteCa","api:DeleteClientGateway","api:DeleteDedicatedGroup","api:DeleteDhcpOptions","api:DeleteDirectLink","api:DeleteDirectLinkInterface","api:DeleteExportTask","api:DeleteFlexibleGpu","api:DeleteImage","api:DeleteInternetService","api:DeleteKeypair","api:DeleteListenerRule","api:DeleteLoadBalancer","api:DeleteLoadBalancerListeners","api:DeleteLoadBalancerPolicy","api:DeleteLoadBalancerTags","api:DeleteNatService","api:DeleteNet","api:DeleteNetAccessPoint","api:DeleteNetPeering","api:DeleteNic","api:DeletePolicy","api:DeletePolicyVersion","api:DeleteProductType","api:DeletePublicIp","api:DeleteRoute","api:DeleteRouteTable","api:DeleteSecurityGroup","api:DeleteSecurityGroupRule","api:DeleteServerCertificate","api:DeleteSnapshot","api:DeleteSubnet","api:DeleteTags","api:DeleteUser","api:DeleteUserGroup","api:DeleteUserGroupPolicy","api:DeleteVirtualGateway","api:DeleteVmGroup","api:DeleteVmTemplate","api:DeleteVms","api:DeleteVolume","api:DeleteVpnConnection","api:DeleteVpnConnectionRoute","api:DeregisterVmsInLoadBalancer","api:LinkFlexibleGpu","api:LinkInternetService","api:LinkLoadBalancerBackendMachines","api:LinkManagedPolicyToUserGroup","api:LinkNic","api:LinkPolicy","api:LinkPrivateIps","api:LinkPublicIp","api:LinkRouteTable","api:LinkVirtualGateway","api:LinkVolume","api:PutUserGroupPolicy","api:ReadAccessKeys","api:ReadAccounts","api:ReadAdminPassword","api:ReadApiAccessPolicy","api:ReadApiAccessRules","api:ReadApiLogs","api:ReadCas","api:ReadCatalog","api:ReadCatalogs","api:ReadClientGateways","api:ReadConsoleOutput","api:ReadConsumptionAccount","api:ReadDedicatedGroups","api:ReadDhcpOptions","api:ReadDirectLinkInterfaces","api:ReadDirectLinks","api:ReadEntitiesLinkedToPolicy","api:ReadFlexibleGpuCatalog","api:ReadFlexibleGpus","api:ReadImageExportTasks","api:ReadImages","api:ReadInternetServices","api:ReadKeypairs","api:ReadLinkedPolicies","api:ReadListenerRules","api:ReadLoadBalancerTags","api:ReadLoadBalancers","api:ReadLocations","api:ReadManagedPoliciesLinkedToUserGroup","api:ReadNatServices","api:ReadNetAccessPointServices","api:ReadNetAccessPoints","api:ReadNetPeerings","api:ReadNets","api:ReadNics","api:ReadPolicies","api:ReadPolicy","api:ReadPolicyVersion","api:ReadPolicyVersions","api:ReadProductTypes","api:ReadPublicCatalog","api:ReadPublicIpRanges","api:ReadPublicIps","api:ReadQuotas","api:ReadRegions","api:ReadRouteTables","api:ReadSecurityGroups","api:ReadServerCertificates","api:ReadSnapshotExportTasks","api:ReadSnapshots","api:ReadSubnets","api:ReadSubregions","api:ReadTags","api:ReadUnitPrice","api:ReadUserGroup","api:ReadUserGroupPolicies","api:ReadUserGroupPolicy","api:ReadUserGroups","api:ReadUserGroupsPerUser","api:ReadUsers","api:ReadVirtualGateways","api:ReadVmGroups","api:ReadVmTemplates","api:ReadVmTypes","api:ReadVms","api:ReadVmsHealth","api:ReadVmsState","api:ReadVolumes","api:ReadVpnConnections","api:RebootVms","api:RegisterVmsInLoadBalancer","api:RejectNetPeering","api:RemoveUserFromUserGroup","api:ScaleDownVmGroup","api:ScaleUpVmGroup","api:SetDefaultPolicyVersion","api:StartVms","api:StopVms","api:UnlinkFlexibleGpu","api:UnlinkInternetService","api:UnlinkLoadBalancerBackendMachines","api:UnlinkManagedPolicyFromUserGroup","api:UnlinkNic","api:UnlinkPolicy","api:UnlinkPrivateIps","api:UnlinkPublicIp","api:UnlinkRouteTable","api:UnlinkVirtualGateway","api:UnlinkVolume","api:UpdateAccessKey","api:UpdateAccount","api:UpdateApiAccessPolicy","api:UpdateApiAccessRule","api:UpdateCa","api:UpdateDedicatedGroup","api:UpdateDirectLinkInterface","api:UpdateFlexibleGpu","api:UpdateImage","api:UpdateListenerRule","api:UpdateLoadBalancer","api:UpdateNet","api:UpdateNetAccessPoint","api:UpdateNic","api:UpdateRoute","api:UpdateRoutePropagation","api:UpdateRouteTableLink","api:UpdateServerCertificate","api:UpdateSnapshot","api:UpdateSubnet","api:UpdateUser","api:UpdateUserGroup","api:UpdateVm","api:UpdateVmGroup","api:UpdateVmTemplate","api:UpdateVolume","api:UpdateVpnConnection"],t.api[a]],[["ec2:*",["ec2:Describe*","ec2:Get*","ec2:Read*"],"ec2:AcceptVpcPeeringConnection","ec2:AllocateAddress","ec2:AssignPrivateIpAddresses","ec2:AssociateAddress","ec2:AssociateDhcpOptions","ec2:AssociateRouteTable","ec2:AttachInternetGateway","ec2:AttachNetworkInterface","ec2:AttachVolume","ec2:AttachVpnGateway","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CancelExportTask","ec2:CopyImage","ec2:CopySnapshot","ec2:CreateCustomerGateway","ec2:CreateDhcpOptions","ec2:CreateImage","ec2:CreateImageExportTask","ec2:CreateInternetGateway","ec2:CreateKeyPair","ec2:CreateNatGateway","ec2:CreateNetworkInterface","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSecurityGroup","ec2:CreateSnapshot","ec2:CreateSnapshotExportTask","ec2:CreateSubnet","ec2:CreateTags","ec2:CreateVolume","ec2:CreateVpc","ec2:CreateVpcEndpoint","ec2:CreateVpcPeeringConnection","ec2:CreateVpnConnection","ec2:CreateVpnConnectionRoute","ec2:CreateVpnGateway","ec2:DeleteCustomerGateway","ec2:DeleteDhcpOptions","ec2:DeleteInternetGateway","ec2:DeleteKeyPair","ec2:DeleteNatGateway","ec2:DeleteNetworkInterface","ec2:DeleteRoute","ec2:DeleteRouteTable","ec2:DeleteSecurityGroup","ec2:DeleteSnapshot","ec2:DeleteSubnet","ec2:DeleteTags","ec2:DeleteVolume","ec2:DeleteVpc","ec2:DeleteVpcEndpoints","ec2:DeleteVpcPeeringConnection","ec2:DeleteVpnConnection","ec2:DeleteVpnConnectionRoute","ec2:DeleteVpnGateway","ec2:DeregisterImage","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeCustomerGateways","ec2:DescribeDhcpOptions","ec2:DescribeImageAttribute","ec2:DescribeImageExportTasks","ec2:DescribeImages","ec2:DescribeInstanceAttribute","ec2:DescribeInstanceStatus","ec2:DescribeInstanceTypes","ec2:DescribeInstances","ec2:DescribeInternetGateways","ec2:DescribeKeyPairs","ec2:DescribeNatGateways","ec2:DescribeNetworkInterfaces","ec2:DescribePrefixLists","ec2:DescribeProductTypes","ec2:DescribeQuotas","ec2:DescribeRegions","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSnapshotAttribute","ec2:DescribeSnapshotExportTasks","ec2:DescribeSnapshots","ec2:DescribeSubnets","ec2:DescribeTags","ec2:DescribeVolumes","ec2:DescribeVpcAttribute","ec2:DescribeVpcEndpointServices","ec2:DescribeVpcEndpoints","ec2:DescribeVpcPeeringConnections","ec2:DescribeVpcs","ec2:DescribeVpnConnections","ec2:DescribeVpnGateways","ec2:DetachInternetGateway","ec2:DetachNetworkInterface","ec2:DetachVolume","ec2:DetachVpnGateway","ec2:DisableVgwRoutePropagation","ec2:DisassociateAddress","ec2:DisassociateRouteTable","ec2:EnableVgwRoutePropagation","ec2:GetConsoleOutput","ec2:GetPasswordData","ec2:GetProductType","ec2:GetProductTypes","ec2:ImportKeyPair","ec2:ImportSnapshot","ec2:ModifyImageAttribute","ec2:ModifyInstanceAttribute","ec2:ModifyInstanceKeypair","ec2:ModifyNetworkInterfaceAttribute","ec2:ModifySnapshotAttribute","ec2:ModifySubnetAttribute","ec2:ModifyVpcEndpoint","ec2:ReadPublicIpRanges","ec2:RebootInstances","ec2:RegisterImage","ec2:RejectVpcPeeringConnection","ec2:ReleaseAddress","ec2:ReplaceRoute","ec2:ReplaceRouteTableAssociation","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","ec2:RunInstances","ec2:StartInstances","ec2:StopInstances","ec2:TerminateInstances","ec2:UnassignPrivateIpAddresses"],"FCU (AWS EC2)"],[["elasticloadbalancing:*",["elasticloadbalancing:Describe*"],"elasticloadbalancing:AddTags","elasticloadbalancing:ConfigureHealthCheck","elasticloadbalancing:CreateAppCookieStickinessPolicy","elasticloadbalancing:CreateLBCookieStickinessPolicy","elasticloadbalancing:CreateLoadBalancer","elasticloadbalancing:CreateLoadBalancerListeners","elasticloadbalancing:CreateLoadBalancerPolicy","elasticloadbalancing:DeleteLoadBalancer","elasticloadbalancing:DeleteLoadBalancerListeners","elasticloadbalancing:DeleteLoadBalancerPolicy","elasticloadbalancing:DeregisterInstancesFromLoadBalancer","elasticloadbalancing:DescribeInstanceHealth","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeTags","elasticloadbalancing:ModifyLoadBalancerAttributes","elasticloadbalancing:RegisterInstancesWithLoadBalancer","elasticloadbalancing:RemoveTags","elasticloadbalancing:SetLoadBalancerListenerSSLCertificate","elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer","elasticloadbalancing:SetLoadBalancerPoliciesOfListener"],"LBU (AWS ELB)"],[["iam:*",["iam:Get*","iam:List*"],"iam:AddUserToGroup","iam:AttachGroupPolicy","iam:AttachUserPolicy","iam:CreateAccessKey","iam:CreateGroup","iam:CreatePolicy","iam:CreatePolicyVersion","iam:CreateUser","iam:DeleteAccessKey","iam:DeleteGroup","iam:DeleteGroupPolicy","iam:DeletePolicy","iam:DeletePolicyVersion","iam:DeleteServerCertificate","iam:DeleteUser","iam:DeleteUserPolicy","iam:DetachGroupPolicy","iam:DetachUserPolicy","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetServerCertificate","iam:GetUser","iam:GetUserPolicy","iam:ListAccessKeys","iam:ListAttachedGroupPolicies","iam:ListAttachedUserPolicies","iam:ListGroupPolicies","iam:ListGroups","iam:ListGroupsForUser","iam:ListPolicies","iam:ListPolicyVersions","iam:ListServerCertificates","iam:ListUserPolicies","iam:ListUsers","iam:PutGroupPolicy","iam:PutUserPolicy","iam:RemoveUserFromGroup","iam:SetDefaultPolicyVersion","iam:UpdateAccessKey","iam:UpdateGroup","iam:UpdateServerCertificate","iam:UpdateUser","iam:UploadServerCertificate"],"EIM (AWS IAM)"],[["directconnect:*",["directconnect:Describe*"],"directconnect:AllocatePrivateVirtualInterface","directconnect:ConfirmPrivateVirtualInterface","directconnect:CreateConnection","directconnect:CreatePrivateVirtualInterface","directconnect:DeleteConnection","directconnect:DeleteVirtualInterface","directconnect:DescribeConnections","directconnect:DescribeLocations","directconnect:DescribeVirtualGateways","directconnect:DescribeVirtualInterfaces"],"DirectLink (AWS Direct Connect)"]];function c(){const e=document.querySelectorAll("#eim-policy-generator > fieldset").length+1,c=[t.allow[a],t.deny[a]],r=[t.actions[a],t.notActions[a]],s=[o("effect",c,"radio",t.allowDeny[a],!1,e),o("what",r,"radio",t.what[a],!1,e),n("actions",i,"checkbox",e)],l=document.createElement("fieldset");l.id="statement-"+e;const p=document.createElement("legend");p.textContent=t.statement[a]+" #"+e;const d=document.createElement("div");for(let e of s)d.append(e);return l.append(p,d),l}function n(e,t,a,i){const c=document.createElement("fieldset"),n=document.createElement("div");n.id=e+"-"+i;for(let e of t){const t=o(e[1],e[0],a,e[1],!0,i);n.append(t)}return c.append(n),c}function o(e,t,a,i,c=!1,n){const o=document.createElement("fieldset"),s=document.createElement("legend");s.textContent=i;const l=document.createElement("div");for(let i of t){const t=r(e,i,a,n);l.append(t)}if(o.append(s,l),c){const e=document.createElement("button");e.type="button",e.textContent=i,s.classList.add("collapsible","full-width"),s.textContent="",s.append(e),l.id=i+"-"+n,l.classList.add("collapse")}return o}function r(e,i,c,n){const o=document.createElement("div"),r=document.createElement("input");r.type=c,r.id=i+"-"+n,r.name=e+"-"+n,r.value=i,"radio"!==c||i!==t.allow[a]&&i!==t.actions[a]||(r.checked=!0),o.append(r);const d=document.createElement("label");if(d.classList.add("full-width"),d.htmlFor=r.id,d.textContent=i,"checkbox"===c)if(Array.isArray(i)){const e=[];for(const t of i)e.push(t.split(":")[1].replace("*",""));d.textContent=t.allReadActions[a].replace("Read",e.join("/")),r.addEventListener("click",l),r.classList.add("spacing-below")}else i.endsWith(":*")?(d.textContent=t.allActions[a]+"",r.addEventListener("click",s)):r.addEventListener("click",p);return o.append(d),o}function s(){const e=document.querySelectorAll('[id="'+this.name+'"] [type="checkbox"]'),t=this.checked;for(let a of e)a.checked=t}function l(){const e=document.querySelectorAll('[id="'+this.name+'"] [type="checkbox"]'),t=this.checked,a=this.value.split(","),i=[];for(const e of a)i.push(e.split(":")[1].replace("*",""));for(let a of e){a.checked=!1;for(const e of i)a.value.includes(e)&&(a.checked=t)}}function p(){const e=document.querySelectorAll('[id="'+this.name+'"] [type="checkbox"]');for(let t of e)t.value.includes("*")&&(t.checked=!1)}function d(){const e=document.querySelectorAll("#eim-policy-generator > fieldset").length,i=document.createElement("button");return i.type="button",i.id="remove",i.textContent=t.removeLastStatement[a]+" #"+e,i.addEventListener("click",m),i}function u(){const e=document.querySelectorAll("#eim-policy-generator > fieldset").length+1;document.querySelector("#eim-policy-generator > fieldset:last-of-type").after(c());const t=document.querySelector("#eim-policy-generator #remove");t&&t.remove();const a=document.querySelector("#eim-policy-generator #add");a.before(d()),a.blur();const i=document.querySelectorAll("#eim-policy-generator [id^=generated-], #eim-policy-generator [for^=generated-], #disclaimer");for(let e of i)e.remove();const n=document.querySelector("#eim-policy-generator #disclaimer");n&&n.remove(),y("statement-"+e)}function m(){const e=document.querySelectorAll("#eim-policy-generator > fieldset").length;document.querySelector("#eim-policy-generator > fieldset:last-of-type").remove();const t=document.querySelector("#eim-policy-generator #remove");t&&t.remove(),e-1>1&&document.querySelector("#eim-policy-generator #add").before(d());const a=document.querySelectorAll("#eim-policy-generator [id^=generated-], #eim-policy-generator [for^=generated-], #disclaimer");for(let e of a)e.remove();const i=document.querySelector("#eim-policy-generator #disclaimer");i&&i.remove()}function y(e){const t=document.querySelectorAll("#"+e+" .collapsible");for(let e=0;e<t.length;e++)t[e].addEventListener("click",(function(){this.classList.toggle("active");const e=this.nextElementSibling;"block"===e.style.display?e.style.display="none":e.style.display="block"}))}function g(){const c=document.querySelectorAll("#eim-policy-generator [id^=generated-], #eim-policy-generator [for^=generated-], #disclaimer");for(let e of c)e.remove();const n=function(){const c=document.querySelectorAll("#eim-policy-generator > fieldset").length+1,n=document.forms["eim-policy-generator"],o={Statement:[]};for(let r=1;r<c;r++){const c=[];for(let e of i){const t=n["statement-"+r].querySelectorAll('[id="'+e[1]+"-"+r+'"] :checked');for(checkbox of t){if(c.push(checkbox.value),checkbox.value.includes(":*"))break;if(checkbox.value.includes("Read*"))break;if(checkbox.value.includes("Describe*"))break}}let s=n["effect-"+r].value;s===t.allow.fr?s=t.allow.en:s===t.deny.fr&&(s=t.deny.en);let l=n["what-"+r].value;l===t.actions.en||l===t.actions.fr?l="Action":l!==t.notActions.en&&l!==t.notActions.fr||(l="NotAction");const p={Effect:s,[l]:c,Resource:["*"]};if(o.Statement.push(p),0===c.length)return[t.error[a]+r+t.errorNeedOneAction[a],!0];const d=JSON.stringify(p).length;if(d>e)return[t.error[a]+r+t.errorPolicyTooLong_1[a]+d+t.errorPolicyTooLong_2[a]+e+t.errorPolicyTooLong_3[a],!0]}return[JSON.stringify(o,null,2),!1]}(),o=n[0],r=n[1],s=function(e){return"'\""+e.replace(/\n| /g,"").replace(/(":|,)/g,"$1 ").replace(/(\[)(?=\})/g,"$1 ").replace(/(?<=\})(\])/g," $1").replace(/"/g,'\\"')+"\"'"}(o);if(b(D,o,"Json","2em"),!r){b(D,s,"JsonString","0em");const e=document.createElement("div");e.id="disclaimer",e.textContent=t.disclaimer[a],D.append(e)}document.getElementById("generated-Json").scrollIntoView({behavior:"smooth",block:"center"})}function b(e,i,c,n){const o=document.createElement("textarea"),r=document.createElement("label");o.id="generated-"+c,o.name="generated-"+c,o.textContent=i,r.htmlFor="generated-"+c,r.textContent=t["label"+c][a],e.append(r,o),o.style.height="calc("+o.scrollHeight+"px + "+n+")"}const D=document.createElement("form");D.id="eim-policy-generator",D.append(c(),function(){const e=document.createElement("button");return e.type="button",e.id="add",e.textContent=t.addAnotherStatement[a],e.addEventListener("click",u),e}(),function(){const e=document.createElement("button");return e.type="button",e.id="generate",e.textContent=t.generateJson[a],e.addEventListener("click",g),e}()),document.querySelector("#eim-policy-generator-holder").append(D),y("statement-1")}();